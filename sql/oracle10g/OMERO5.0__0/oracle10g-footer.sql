--
-- Copyright 2011-2015 Glencoe Software, Inc. All rights reserved.
-- Use is subject to license terms supplied in LICENSE.txt
--

--
-- This file was generated by dsl/resources/ome/dsl/oracle10g-footer.vm
--

--
-- Triggers
--
-- Not necessary in Oracle since constraints can be initially deferred.
-- but indexes on all FK columns are needed for performance reasons.

--
-- Indexes
--
  CREATE INDEX i_Ann_owner ON annotation(owner_id);
  CREATE INDEX i_Ann_group ON annotation(group_id);
  CREATE INDEX i_AnnAnnLink_owner ON annotationannotationlink(owner_id);
  CREATE INDEX i_AnnAnnLink_group ON annotationannotationlink(group_id);
  CREATE INDEX i_AnnAnnLink_parent ON annotationannotationlink(parent);
  CREATE INDEX i_AnnAnnLink_child ON annotationannotationlink(child);
  CREATE INDEX i_Arc_type ON arc(type);
  CREATE INDEX i_Channel_owner ON channel(owner_id);
  CREATE INDEX i_Channel_group ON channel(group_id);
  CREATE INDEX i_Channel_statsInfo ON channel(statsInfo);
  CREATE INDEX i_Channel_logicalChannel ON channel(logicalChannel);
  CREATE INDEX i_Channel_pixels ON channel(pixels);
  CREATE INDEX i_ChannelAnnLink_owner ON channelannotationlink(owner_id);
  CREATE INDEX i_ChannelAnnLink_group ON channelannotationlink(group_id);
  CREATE INDEX i_ChannelAnnLink_parent ON channelannotationlink(parent);
  CREATE INDEX i_ChannelAnnLink_child ON channelannotationlink(child);
  CREATE INDEX i_ChannelBinding_owner ON channelbinding(owner_id);
  CREATE INDEX i_ChannelBinding_group ON channelbinding(group_id);
  CREATE INDEX i_ChannelBinding_renderingDef ON channelbinding(renderingDef);
  CREATE INDEX i_ChannelBinding_family ON channelbinding(family);
  CREATE INDEX i_CodomainMapContext_owner ON codomainmapcontext(owner_id);
  CREATE INDEX i_CodomainMapContext_group ON codomainmapcontext(group_id);
  CREATE INDEX i_CodomainMapContext_render5 ON codomainmapcontext(renderingDef);
  CREATE INDEX i_Dataset_owner ON dataset(owner_id);
  CREATE INDEX i_Dataset_group ON dataset(group_id);
  CREATE INDEX i_DatasetAnnLink_owner ON datasetannotationlink(owner_id);
  CREATE INDEX i_DatasetAnnLink_group ON datasetannotationlink(group_id);
  CREATE INDEX i_DatasetAnnLink_parent ON datasetannotationlink(parent);
  CREATE INDEX i_DatasetAnnLink_child ON datasetannotationlink(child);
  CREATE INDEX i_DatasetImageLink_owner ON datasetimagelink(owner_id);
  CREATE INDEX i_DatasetImageLink_group ON datasetimagelink(group_id);
  CREATE INDEX i_DatasetImageLink_parent ON datasetimagelink(parent);
  CREATE INDEX i_DatasetImageLink_child ON datasetimagelink(child);
  CREATE INDEX i_Detector_owner ON detector(owner_id);
  CREATE INDEX i_Detector_group ON detector(group_id);
  CREATE INDEX i_Detector_type ON detector(type);
  CREATE INDEX i_Detector_instrument ON detector(instrument);
  CREATE INDEX i_DetectorSettings_owner ON detectorsettings(owner_id);
  CREATE INDEX i_DetectorSettings_group ON detectorsettings(group_id);
  CREATE INDEX i_DetectorSettings_binning ON detectorsettings(binning);
  CREATE INDEX i_DetectorSettings_detector ON detectorsettings(detector);
  CREATE INDEX i_Dichroic_owner ON dichroic(owner_id);
  CREATE INDEX i_Dichroic_group ON dichroic(group_id);
  CREATE INDEX i_Dichroic_instrument ON dichroic(instrument);
  CREATE INDEX i_Event_experimenter ON event(experimenter);
  CREATE INDEX i_Event_experimenterGroup ON event(experimenterGroup);
  CREATE INDEX i_Event_type ON event(type);
  CREATE INDEX i_Event_containingEvent ON event(containingEvent);
  CREATE INDEX i_Event_session ON event("session");
  CREATE INDEX i_EventLog_event ON eventlog(event);
  CREATE INDEX i_Experiment_owner ON experiment(owner_id);
  CREATE INDEX i_Experiment_group ON experiment(group_id);
  CREATE INDEX i_Experiment_type ON experiment(type);
  CREATE INDEX i_ExperimenterAnnLink_owner ON experimenterannotationlink(owner_id);
  CREATE INDEX i_ExperimenterAnnLink_group ON experimenterannotationlink(group_id);
  CREATE INDEX i_ExperimenterAnnLink_parent ON experimenterannotationlink(parent);
  CREATE INDEX i_ExperimenterAnnLink_child ON experimenterannotationlink(child);
  CREATE INDEX i_GroupAnnLink_owner ON experimentergroupannotation3(owner_id);
  CREATE INDEX i_GroupAnnLink_group ON experimentergroupannotation3(group_id);
  CREATE INDEX i_GroupAnnLink_parent ON experimentergroupannotation3(parent);
  CREATE INDEX i_GroupAnnLink_child ON experimentergroupannotation3(child);
  CREATE INDEX i_ExternalInfo_owner ON externalinfo(owner_id);
  CREATE INDEX i_ExternalInfo_group ON externalinfo(group_id);
  CREATE INDEX i_Filament_type ON filament(type);
  CREATE INDEX i_FileAnn_file ON annotation("file");
  CREATE INDEX i_Fileset_owner ON fileset(owner_id);
  CREATE INDEX i_Fileset_group ON fileset(group_id);
  CREATE INDEX i_FilesetAnnLink_owner ON filesetannotationlink(owner_id);
  CREATE INDEX i_FilesetAnnLink_group ON filesetannotationlink(group_id);
  CREATE INDEX i_FilesetAnnLink_parent ON filesetannotationlink(parent);
  CREATE INDEX i_FilesetAnnLink_child ON filesetannotationlink(child);
  CREATE INDEX i_FilesetEntry_owner ON filesetentry(owner_id);
  CREATE INDEX i_FilesetEntry_group ON filesetentry(group_id);
  CREATE INDEX i_FilesetEntry_fileset ON filesetentry(fileset);
  CREATE INDEX i_FilesetEntry_originalFile ON filesetentry(originalFile);
  CREATE INDEX i_FilesetJobLink_owner ON filesetjoblink(owner_id);
  CREATE INDEX i_FilesetJobLink_group ON filesetjoblink(group_id);
  CREATE INDEX i_FilesetJobLink_parent ON filesetjoblink(parent);
  CREATE INDEX i_FilesetJobLink_child ON filesetjoblink(child);
  CREATE INDEX i_FilesetVersionInfo_owner ON filesetversioninfo(owner_id);
  CREATE INDEX i_FilesetVersionInfo_group ON filesetversioninfo(group_id);
  CREATE INDEX i_Filter_owner ON filter(owner_id);
  CREATE INDEX i_Filter_group ON filter(group_id);
  CREATE INDEX i_Filter_type ON filter(type);
  CREATE INDEX i_Filter_transmittanceRange ON filter(transmittanceRange);
  CREATE INDEX i_Filter_instrument ON filter(instrument);
  CREATE INDEX i_FilterSet_owner ON filterset(owner_id);
  CREATE INDEX i_FilterSet_group ON filterset(group_id);
  CREATE INDEX i_FilterSet_instrument ON filterset(instrument);
  CREATE INDEX i_FilterSet_dichroic ON filterset(dichroic);
  CREATE INDEX i_FilterSetEmissionFilterLi7 ON filtersetemissionfilterlink(owner_id);
  CREATE INDEX i_FilterSetEmissionFilterLi8 ON filtersetemissionfilterlink(group_id);
  CREATE INDEX i_FilterSetEmissionFilterLi9 ON filtersetemissionfilterlink(parent);
  CREATE INDEX i_FilterSetEmissionFilterLi10 ON filtersetemissionfilterlink(child);
  CREATE INDEX i_FilterSetExcitationFilter9 ON filtersetexcitationfilterlink(owner_id);
  CREATE INDEX i_FilterSetExcitationFilter10 ON filtersetexcitationfilterlink(group_id);
  CREATE INDEX i_FilterSetExcitationFilter11 ON filtersetexcitationfilterlink(parent);
  CREATE INDEX i_FilterSetExcitationFilter12 ON filtersetexcitationfilterlink(child);
  CREATE INDEX i_GroupExperimenterMap_parent ON groupexperimentermap(parent);
  CREATE INDEX i_GroupExperimenterMap_child ON groupexperimentermap(child);
  CREATE INDEX i_Image_owner ON image(owner_id);
  CREATE INDEX i_Image_group ON image(group_id);
  CREATE INDEX i_Image_format ON image(format);
  CREATE INDEX i_Image_imagingEnvironment ON image(imagingEnvironment);
  CREATE INDEX i_Image_objectiveSettings ON image(objectiveSettings);
  CREATE INDEX i_Image_instrument ON image(instrument);
  CREATE INDEX i_Image_stageLabel ON image(stageLabel);
  CREATE INDEX i_Image_experiment ON image(experiment);
  CREATE INDEX i_Image_fileset ON image(fileset);
  CREATE INDEX i_ImageAnnLink_owner ON imageannotationlink(owner_id);
  CREATE INDEX i_ImageAnnLink_group ON imageannotationlink(group_id);
  CREATE INDEX i_ImageAnnLink_parent ON imageannotationlink(parent);
  CREATE INDEX i_ImageAnnLink_child ON imageannotationlink(child);
  CREATE INDEX i_ImagingEnvironment_owner ON imagingenvironment(owner_id);
  CREATE INDEX i_ImagingEnvironment_group ON imagingenvironment(group_id);
  CREATE INDEX i_Instrument_owner ON instrument(owner_id);
  CREATE INDEX i_Instrument_group ON instrument(group_id);
  CREATE INDEX i_Instrument_microscope ON instrument(microscope);
  CREATE INDEX i_Job_owner ON job(owner_id);
  CREATE INDEX i_Job_group ON job(group_id);
  CREATE INDEX i_Job_status ON job(status);
  CREATE INDEX i_JobOriginalFileLink_owner ON joboriginalfilelink(owner_id);
  CREATE INDEX i_JobOriginalFileLink_group ON joboriginalfilelink(group_id);
  CREATE INDEX i_JobOriginalFileLink_parent ON joboriginalfilelink(parent);
  CREATE INDEX i_JobOriginalFileLink_child ON joboriginalfilelink(child);
  CREATE INDEX i_Laser_type ON laser(type);
  CREATE INDEX i_Laser_laserMedium ON laser(laserMedium);
  CREATE INDEX i_Laser_pulse ON laser(pulse);
  CREATE INDEX i_Laser_pump ON laser(pump);
  CREATE INDEX i_LightPath_owner ON lightpath(owner_id);
  CREATE INDEX i_LightPath_group ON lightpath(group_id);
  CREATE INDEX i_LightPath_dichroic ON lightpath(dichroic);
  CREATE INDEX i_LightPathEmissionFilterLi7 ON lightpathemissionfilterlink(owner_id);
  CREATE INDEX i_LightPathEmissionFilterLi8 ON lightpathemissionfilterlink(group_id);
  CREATE INDEX i_LightPathEmissionFilterLi9 ON lightpathemissionfilterlink(parent);
  CREATE INDEX i_LightPathEmissionFilterLi10 ON lightpathemissionfilterlink(child);
  CREATE INDEX i_LightPathExcitationFilter9 ON lightpathexcitationfilterlink(owner_id);
  CREATE INDEX i_LightPathExcitationFilter10 ON lightpathexcitationfilterlink(group_id);
  CREATE INDEX i_LightPathExcitationFilter11 ON lightpathexcitationfilterlink(parent);
  CREATE INDEX i_LightPathExcitationFilter12 ON lightpathexcitationfilterlink(child);
  CREATE INDEX i_LightSettings_owner ON lightsettings(owner_id);
  CREATE INDEX i_LightSettings_group ON lightsettings(group_id);
  CREATE INDEX i_LightSettings_lightSource ON lightsettings(lightSource);
  CREATE INDEX i_LightSettings_microbeamMa9 ON lightsettings(microbeamManipulation);
  CREATE INDEX i_LightSource_owner ON lightsource(owner_id);
  CREATE INDEX i_LightSource_group ON lightsource(group_id);
  CREATE INDEX i_LightSource_instrument ON lightsource(instrument);
  CREATE INDEX i_Link_owner ON link(owner_id);
  CREATE INDEX i_Link_group ON link(group_id);
  CREATE INDEX i_LogicalChannel_owner ON logicalchannel(owner_id);
  CREATE INDEX i_LogicalChannel_group ON logicalchannel(group_id);
  CREATE INDEX i_LogicalChannel_illumination ON logicalchannel(illumination);
  CREATE INDEX i_LogicalChannel_contrastMe3 ON logicalchannel(contrastMethod);
  CREATE INDEX i_LogicalChannel_otf ON logicalchannel(otf);
  CREATE INDEX i_LogicalChannel_detectorSe5 ON logicalchannel(detectorSettings);
  CREATE INDEX i_LogicalChannel_lightSourc8 ON logicalchannel(lightSourceSettings);
  CREATE INDEX i_LogicalChannel_filterSet ON logicalchannel(filterSet);
  CREATE INDEX i_LogicalChannel_photometri14 ON logicalchannel(photometricInterpretation);
  CREATE INDEX i_LogicalChannel_mode ON logicalchannel("mode");
  CREATE INDEX i_LogicalChannel_lightPath ON logicalchannel(lightPath);
  CREATE INDEX i_Mask_pixels ON shape(pixels);
  CREATE INDEX i_MetadataImportJob_version3 ON metadataimportjob(versionInfo);
  CREATE INDEX i_MicrobeamManipulation_owner ON microbeammanipulation(owner_id);
  CREATE INDEX i_MicrobeamManipulation_group ON microbeammanipulation(group_id);
  CREATE INDEX i_MicrobeamManipulation_type ON microbeammanipulation(type);
  CREATE INDEX i_MicrobeamManipulation_exp6 ON microbeammanipulation(experiment);
  CREATE INDEX i_Microscope_owner ON microscope(owner_id);
  CREATE INDEX i_Microscope_group ON microscope(group_id);
  CREATE INDEX i_Microscope_type ON microscope(type);
  CREATE INDEX i_Namespace_owner ON namespace(owner_id);
  CREATE INDEX i_Namespace_group ON namespace(group_id);
  CREATE INDEX i_NamespaceAnnLink_owner ON namespaceannotationlink(owner_id);
  CREATE INDEX i_NamespaceAnnLink_group ON namespaceannotationlink(group_id);
  CREATE INDEX i_NamespaceAnnLink_parent ON namespaceannotationlink(parent);
  CREATE INDEX i_NamespaceAnnLink_child ON namespaceannotationlink(child);
  CREATE INDEX i_NodeAnnLink_owner ON nodeannotationlink(owner_id);
  CREATE INDEX i_NodeAnnLink_group ON nodeannotationlink(group_id);
  CREATE INDEX i_NodeAnnLink_parent ON nodeannotationlink(parent);
  CREATE INDEX i_NodeAnnLink_child ON nodeannotationlink(child);
  CREATE INDEX i_OTF_owner ON otf(owner_id);
  CREATE INDEX i_OTF_group ON otf(group_id);
  CREATE INDEX i_OTF_pixelsType ON otf(pixelsType);
  CREATE INDEX i_OTF_filterSet ON otf(filterSet);
  CREATE INDEX i_OTF_objective ON otf(objective);
  CREATE INDEX i_OTF_instrument ON otf(instrument);
  CREATE INDEX i_Objective_owner ON objective(owner_id);
  CREATE INDEX i_Objective_group ON objective(group_id);
  CREATE INDEX i_Objective_immersion ON objective(immersion);
  CREATE INDEX i_Objective_correction ON objective(correction);
  CREATE INDEX i_Objective_instrument ON objective(instrument);
  CREATE INDEX i_ObjectiveSettings_owner ON objectivesettings(owner_id);
  CREATE INDEX i_ObjectiveSettings_group ON objectivesettings(group_id);
  CREATE INDEX i_ObjectiveSettings_medium ON objectivesettings(medium);
  CREATE INDEX i_ObjectiveSettings_objective ON objectivesettings(objective);
  CREATE INDEX i_OriginalFile_owner ON originalfile(owner_id);
  CREATE INDEX i_OriginalFile_group ON originalfile(group_id);
  CREATE INDEX i_OriginalFile_hasher ON originalfile(hasher);
  CREATE INDEX i_OriginalFileAnnLink_owner ON originalfileannotationlink(owner_id);
  CREATE INDEX i_OriginalFileAnnLink_group ON originalfileannotationlink(group_id);
  CREATE INDEX i_OriginalFileAnnLink_parent ON originalfileannotationlink(parent);
  CREATE INDEX i_OriginalFileAnnLink_child ON originalfileannotationlink(child);
  CREATE INDEX i_Pixels_owner ON pixels(owner_id);
  CREATE INDEX i_Pixels_group ON pixels(group_id);
  CREATE INDEX i_Pixels_image ON pixels(image);
  CREATE INDEX i_Pixels_relatedTo ON pixels(relatedTo);
  CREATE INDEX i_Pixels_pixelsType ON pixels(pixelsType);
  CREATE INDEX i_Pixels_dimensionOrder ON pixels(dimensionOrder);
  CREATE INDEX i_PixelsAnnLink_owner ON pixelsannotationlink(owner_id);
  CREATE INDEX i_PixelsAnnLink_group ON pixelsannotationlink(group_id);
  CREATE INDEX i_PixelsAnnLink_parent ON pixelsannotationlink(parent);
  CREATE INDEX i_PixelsAnnLink_child ON pixelsannotationlink(child);
  CREATE INDEX i_PixelsOriginalFileMap_owner ON pixelsoriginalfilemap(owner_id);
  CREATE INDEX i_PixelsOriginalFileMap_group ON pixelsoriginalfilemap(group_id);
  CREATE INDEX i_PixelsOriginalFileMap_parent ON pixelsoriginalfilemap(parent);
  CREATE INDEX i_PixelsOriginalFileMap_child ON pixelsoriginalfilemap(child);
  CREATE INDEX i_PlaneInfo_owner ON planeinfo(owner_id);
  CREATE INDEX i_PlaneInfo_group ON planeinfo(group_id);
  CREATE INDEX i_PlaneInfo_pixels ON planeinfo(pixels);
  CREATE INDEX i_PlaneInfoAnnLink_owner ON planeinfoannotationlink(owner_id);
  CREATE INDEX i_PlaneInfoAnnLink_group ON planeinfoannotationlink(group_id);
  CREATE INDEX i_PlaneInfoAnnLink_parent ON planeinfoannotationlink(parent);
  CREATE INDEX i_PlaneInfoAnnLink_child ON planeinfoannotationlink(child);
  CREATE INDEX i_Plate_owner ON plate(owner_id);
  CREATE INDEX i_Plate_group ON plate(group_id);
  CREATE INDEX i_PlateAcquisition_owner ON plateacquisition(owner_id);
  CREATE INDEX i_PlateAcquisition_group ON plateacquisition(group_id);
  CREATE INDEX i_PlateAcquisition_plate ON plateacquisition(plate);
  CREATE INDEX i_PlateAcquisitionAnnLink_o3 ON plateacquisitionannotationlink(owner_id);
  CREATE INDEX i_PlateAcquisitionAnnLink_g3 ON plateacquisitionannotationlink(group_id);
  CREATE INDEX i_PlateAcquisitionAnnLink_p4 ON plateacquisitionannotationlink(parent);
  CREATE INDEX i_PlateAcquisitionAnnLink_c3 ON plateacquisitionannotationlink(child);
  CREATE INDEX i_PlateAnnLink_owner ON plateannotationlink(owner_id);
  CREATE INDEX i_PlateAnnLink_group ON plateannotationlink(group_id);
  CREATE INDEX i_PlateAnnLink_parent ON plateannotationlink(parent);
  CREATE INDEX i_PlateAnnLink_child ON plateannotationlink(child);
  CREATE INDEX i_Project_owner ON project(owner_id);
  CREATE INDEX i_Project_group ON project(group_id);
  CREATE INDEX i_ProjectAnnLink_owner ON projectannotationlink(owner_id);
  CREATE INDEX i_ProjectAnnLink_group ON projectannotationlink(group_id);
  CREATE INDEX i_ProjectAnnLink_parent ON projectannotationlink(parent);
  CREATE INDEX i_ProjectAnnLink_child ON projectannotationlink(child);
  CREATE INDEX i_ProjectDatasetLink_owner ON projectdatasetlink(owner_id);
  CREATE INDEX i_ProjectDatasetLink_group ON projectdatasetlink(group_id);
  CREATE INDEX i_ProjectDatasetLink_parent ON projectdatasetlink(parent);
  CREATE INDEX i_ProjectDatasetLink_child ON projectdatasetlink(child);
  CREATE INDEX i_QuantumDef_owner ON quantumdef(owner_id);
  CREATE INDEX i_QuantumDef_group ON quantumdef(group_id);
  CREATE INDEX i_Reagent_owner ON reagent(owner_id);
  CREATE INDEX i_Reagent_group ON reagent(group_id);
  CREATE INDEX i_Reagent_screen ON reagent(screen);
  CREATE INDEX i_ReagentAnnLink_owner ON reagentannotationlink(owner_id);
  CREATE INDEX i_ReagentAnnLink_group ON reagentannotationlink(group_id);
  CREATE INDEX i_ReagentAnnLink_parent ON reagentannotationlink(parent);
  CREATE INDEX i_ReagentAnnLink_child ON reagentannotationlink(child);
  CREATE INDEX i_RenderingDef_owner ON renderingdef(owner_id);
  CREATE INDEX i_RenderingDef_group ON renderingdef(group_id);
  CREATE INDEX i_RenderingDef_pixels ON renderingdef(pixels);
  CREATE INDEX i_RenderingDef_model ON renderingdef(model);
  CREATE INDEX i_RenderingDef_quantization ON renderingdef(quantization);
  CREATE INDEX i_Roi_owner ON roi(owner_id);
  CREATE INDEX i_Roi_group ON roi(group_id);
  CREATE INDEX i_Roi_image ON roi(image);
  CREATE INDEX i_Roi_source ON roi(source);
  CREATE INDEX i_RoiAnnLink_owner ON roiannotationlink(owner_id);
  CREATE INDEX i_RoiAnnLink_group ON roiannotationlink(group_id);
  CREATE INDEX i_RoiAnnLink_parent ON roiannotationlink(parent);
  CREATE INDEX i_RoiAnnLink_child ON roiannotationlink(child);
  CREATE INDEX i_Screen_owner ON screen(owner_id);
  CREATE INDEX i_Screen_group ON screen(group_id);
  CREATE INDEX i_ScreenAnnLink_owner ON screenannotationlink(owner_id);
  CREATE INDEX i_ScreenAnnLink_group ON screenannotationlink(group_id);
  CREATE INDEX i_ScreenAnnLink_parent ON screenannotationlink(parent);
  CREATE INDEX i_ScreenAnnLink_child ON screenannotationlink(child);
  CREATE INDEX i_ScreenPlateLink_owner ON screenplatelink(owner_id);
  CREATE INDEX i_ScreenPlateLink_group ON screenplatelink(group_id);
  CREATE INDEX i_ScreenPlateLink_parent ON screenplatelink(parent);
  CREATE INDEX i_ScreenPlateLink_child ON screenplatelink(child);
  CREATE INDEX i_Session_node ON session_(node);
  CREATE INDEX i_Session_owner ON session_(owner);
  CREATE INDEX i_SessionAnnLink_owner ON sessionannotationlink(owner_id);
  CREATE INDEX i_SessionAnnLink_group ON sessionannotationlink(group_id);
  CREATE INDEX i_SessionAnnLink_parent ON sessionannotationlink(parent);
  CREATE INDEX i_SessionAnnLink_child ON sessionannotationlink(child);
  CREATE INDEX i_Shape_owner ON shape(owner_id);
  CREATE INDEX i_Shape_group ON shape(group_id);
  CREATE INDEX i_Shape_roi ON shape(roi);
  CREATE INDEX i_Share_group ON share_("group");
  CREATE INDEX i_ShareMember_parent ON sharemember(parent);
  CREATE INDEX i_ShareMember_child ON sharemember(child);
  CREATE INDEX i_StageLabel_owner ON stagelabel(owner_id);
  CREATE INDEX i_StageLabel_group ON stagelabel(group_id);
  CREATE INDEX i_StatsInfo_owner ON statsinfo(owner_id);
  CREATE INDEX i_StatsInfo_group ON statsinfo(group_id);
  CREATE INDEX i_Thumbnail_owner ON thumbnail(owner_id);
  CREATE INDEX i_Thumbnail_group ON thumbnail(group_id);
  CREATE INDEX i_Thumbnail_pixels ON thumbnail(pixels);
  CREATE INDEX i_TransmittanceRange_owner ON transmittancerange(owner_id);
  CREATE INDEX i_TransmittanceRange_group ON transmittancerange(group_id);
  CREATE INDEX i_UploadJob_versionInfo ON uploadjob(versionInfo);
  CREATE INDEX i_Well_owner ON well(owner_id);
  CREATE INDEX i_Well_group ON well(group_id);
  CREATE INDEX i_Well_plate ON well(plate);
  CREATE INDEX i_WellAnnLink_owner ON wellannotationlink(owner_id);
  CREATE INDEX i_WellAnnLink_group ON wellannotationlink(group_id);
  CREATE INDEX i_WellAnnLink_parent ON wellannotationlink(parent);
  CREATE INDEX i_WellAnnLink_child ON wellannotationlink(child);
  CREATE INDEX i_WellReagentLink_owner ON wellreagentlink(owner_id);
  CREATE INDEX i_WellReagentLink_group ON wellreagentlink(group_id);
  CREATE INDEX i_WellReagentLink_parent ON wellreagentlink(parent);
  CREATE INDEX i_WellReagentLink_child ON wellreagentlink(child);
  CREATE INDEX i_WellSample_owner ON wellsample(owner_id);
  CREATE INDEX i_WellSample_group ON wellsample(group_id);
  CREATE INDEX i_WellSample_plateAcquisition ON wellsample(plateAcquisition);
  CREATE INDEX i_WellSample_well ON wellsample(well);
  CREATE INDEX i_WellSample_image ON wellsample(image);
  CREATE INDEX i_WellSampleAnnLink_owner ON wellsampleannotationlink(owner_id);
  CREATE INDEX i_WellSampleAnnLink_group ON wellsampleannotationlink(group_id);
  CREATE INDEX i_WellSampleAnnLink_parent ON wellsampleannotationlink(parent);
  CREATE INDEX i_WellSampleAnnLink_child ON wellsampleannotationlink(child);

--
-- a function for showing our permissions
-- select id, ome_perms(permissions) FROM sometable...
--

CREATE OR REPLACE FUNCTION ome_perms(p NUMBER)
RETURN VARCHAR
IS
       ur CHAR(1) DEFAULT '-';
       uw CHAR(1) DEFAULT '-';
       gr CHAR(1) DEFAULT '-';
       gw CHAR(1) DEFAULT '-';
       wr CHAR(1) DEFAULT '-';
       ww CHAR(1) DEFAULT '-';
   BEGIN
       -- shift 8
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),    64, 0),
                             LPAD(conversion_api.to_bin(1024), 64, 0)) = LPAD(conversion_api.to_bin(1024), 64, 0)
                 THEN 'r'
                 ELSE '-'
              END
         INTO ur
         FROM dual;
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),   64, 0),
                             LPAD(conversion_api.to_bin(512), 64, 0)) = LPAD(conversion_api.to_bin(512), 64, 0)
                 THEN 'w'
                 ELSE '-'
              END
         INTO uw
         FROM dual;
       -- shift 4
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),  64, 0),
                             LPAD(conversion_api.to_bin(64), 64, 0)) = LPAD(conversion_api.to_bin(64), 64, 0)
                 THEN 'r'
                 ELSE '-'
              END
         INTO gr
         FROM dual;
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),  64, 0),
                             LPAD(conversion_api.to_bin(32), 64, 0)) = LPAD(conversion_api.to_bin(32), 64, 0)
                 THEN 'w'
                 ELSE '-'
              END
         INTO gw
         FROM dual;
       -- shift 0
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),  64, 0),
                             LPAD(conversion_api.to_bin(4),  64, 0)) = LPAD(conversion_api.to_bin(4), 64, 0)
                 THEN 'r'
                 ELSE '-'
              END
         INTO wr
         FROM dual;
       SELECT CASE
                 WHEN BITAND(LPAD(conversion_api.to_bin(p),  64, 0),
                             LPAD(conversion_api.to_bin(2),  64, 0)) = LPAD(conversion_api.to_bin(2), 64, 0)
                 THEN 'w'
                 ELSE '-'
              END
         INTO ww
         FROM dual;

       RETURN ur||uw||gr||gw||wr||ww;
END ome_perms;
/
--
--
-- #1176 : create our own nextval() functionality for more consistent
-- sequence operation in hibernate. This functionality was updated for
-- OMERO 4.2 (#2508) in order to prevent logging during triggers.
--

CREATE TABLE my_sequences(seq_name      VARCHAR2(50) NOT NULL PRIMARY KEY,
                          current_value NUMBER       NOT NULL);

INSERT INTO my_sequences VALUES('LOCK_SEQ',0);
INSERT INTO my_sequences VALUES('SEQ_ACQUISITIONMODE',0);
INSERT INTO my_sequences VALUES('SEQ_ANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_ANNOTATIONANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_ARC',0);
INSERT INTO my_sequences VALUES('SEQ_ARCTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_BASICANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_BINNING',0);
INSERT INTO my_sequences VALUES('SEQ_BOOLEANANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_CHANNEL',0);
INSERT INTO my_sequences VALUES('SEQ_CHANNELANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_CHANNELBINDING',0);
INSERT INTO my_sequences VALUES('SEQ_CHECKSUMALGORITHM',0);
INSERT INTO my_sequences VALUES('SEQ_CODOMAINMAPCONTEXT',0);
INSERT INTO my_sequences VALUES('SEQ_COMMENTANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_CONTRASTMETHOD',0);
INSERT INTO my_sequences VALUES('SEQ_CONTRASTSTRETCHINGCONTEXT',0);
INSERT INTO my_sequences VALUES('SEQ_CORRECTION',0);
INSERT INTO my_sequences VALUES('SEQ_DBPATCH',0);
INSERT INTO my_sequences VALUES('SEQ_DATASET',0);
INSERT INTO my_sequences VALUES('SEQ_DATASETANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_DATASETIMAGELINK',0);
INSERT INTO my_sequences VALUES('SEQ_DETECTOR',0);
INSERT INTO my_sequences VALUES('SEQ_DETECTORSETTINGS',0);
INSERT INTO my_sequences VALUES('SEQ_DETECTORTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_DICHROIC',0);
INSERT INTO my_sequences VALUES('SEQ_DIMENSIONORDER',0);
INSERT INTO my_sequences VALUES('SEQ_DOUBLEANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_ELLIPSE',0);
INSERT INTO my_sequences VALUES('SEQ_EVENT',0);
INSERT INTO my_sequences VALUES('SEQ_EVENTLOG',0);
INSERT INTO my_sequences VALUES('SEQ_EVENTTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENT',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENTTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENTER',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENTERANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENTERGROUP',0);
INSERT INTO my_sequences VALUES('SEQ_EXPERIMENTERGROUPANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_EXTERNALINFO',0);
INSERT INTO my_sequences VALUES('SEQ_FAMILY',0);
INSERT INTO my_sequences VALUES('SEQ_FILAMENT',0);
INSERT INTO my_sequences VALUES('SEQ_FILAMENTTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_FILEANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_FILESET',0);
INSERT INTO my_sequences VALUES('SEQ_FILESETANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_FILESETENTRY',0);
INSERT INTO my_sequences VALUES('SEQ_FILESETJOBLINK',0);
INSERT INTO my_sequences VALUES('SEQ_FILESETVERSIONINFO',0);
INSERT INTO my_sequences VALUES('SEQ_FILTER',0);
INSERT INTO my_sequences VALUES('SEQ_FILTERSET',0);
INSERT INTO my_sequences VALUES('SEQ_FILTERSETEMISSIONFILTERLINK',0);
INSERT INTO my_sequences VALUES('SEQ_FILTERSETEXCITATIONFILTERLINK',0);
INSERT INTO my_sequences VALUES('SEQ_FILTERTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_FORMAT',0);
INSERT INTO my_sequences VALUES('SEQ_GROUPEXPERIMENTERMAP',0);
INSERT INTO my_sequences VALUES('SEQ_ILLUMINATION',0);
INSERT INTO my_sequences VALUES('SEQ_IMAGE',0);
INSERT INTO my_sequences VALUES('SEQ_IMAGEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_IMAGINGENVIRONMENT',0);
INSERT INTO my_sequences VALUES('SEQ_IMMERSION',0);
INSERT INTO my_sequences VALUES('SEQ_IMPORTJOB',0);
INSERT INTO my_sequences VALUES('SEQ_INDEXINGJOB',0);
INSERT INTO my_sequences VALUES('SEQ_INSTRUMENT',0);
INSERT INTO my_sequences VALUES('SEQ_INTEGRITYCHECKJOB',0);
INSERT INTO my_sequences VALUES('SEQ_JOB',0);
INSERT INTO my_sequences VALUES('SEQ_JOBORIGINALFILELINK',0);
INSERT INTO my_sequences VALUES('SEQ_JOBSTATUS',0);
INSERT INTO my_sequences VALUES('SEQ_LABEL',0);
INSERT INTO my_sequences VALUES('SEQ_LASER',0);
INSERT INTO my_sequences VALUES('SEQ_LASERMEDIUM',0);
INSERT INTO my_sequences VALUES('SEQ_LASERTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTEMITTINGDIODE',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTPATH',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTPATHEMISSIONFILTERLINK',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTPATHEXCITATIONFILTERLINK',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTSETTINGS',0);
INSERT INTO my_sequences VALUES('SEQ_LIGHTSOURCE',0);
INSERT INTO my_sequences VALUES('SEQ_LINE',0);
INSERT INTO my_sequences VALUES('SEQ_LINK',0);
INSERT INTO my_sequences VALUES('SEQ_LISTANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_LOGICALCHANNEL',0);
INSERT INTO my_sequences VALUES('SEQ_LONGANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_MASK',0);
INSERT INTO my_sequences VALUES('SEQ_MEDIUM',0);
INSERT INTO my_sequences VALUES('SEQ_METADATAIMPORTJOB',0);
INSERT INTO my_sequences VALUES('SEQ_MICROBEAMMANIPULATION',0);
INSERT INTO my_sequences VALUES('SEQ_MICROBEAMMANIPULATIONTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_MICROSCOPE',0);
INSERT INTO my_sequences VALUES('SEQ_MICROSCOPETYPE',0);
INSERT INTO my_sequences VALUES('SEQ_NAMESPACE',0);
INSERT INTO my_sequences VALUES('SEQ_NAMESPACEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_NODE',0);
INSERT INTO my_sequences VALUES('SEQ_NODEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_NUMERICANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_OTF',0);
INSERT INTO my_sequences VALUES('SEQ_OBJECTIVE',0);
INSERT INTO my_sequences VALUES('SEQ_OBJECTIVESETTINGS',0);
INSERT INTO my_sequences VALUES('SEQ_ORIGINALFILE',0);
INSERT INTO my_sequences VALUES('SEQ_ORIGINALFILEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PARSEJOB',0);
INSERT INTO my_sequences VALUES('SEQ_PATH',0);
INSERT INTO my_sequences VALUES('SEQ_PHOTOMETRICINTERPRETATION',0);
INSERT INTO my_sequences VALUES('SEQ_PIXELDATAJOB',0);
INSERT INTO my_sequences VALUES('SEQ_PIXELS',0);
INSERT INTO my_sequences VALUES('SEQ_PIXELSANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PIXELSORIGINALFILEMAP',0);
INSERT INTO my_sequences VALUES('SEQ_PIXELSTYPE',0);
INSERT INTO my_sequences VALUES('SEQ_PLANEINFO',0);
INSERT INTO my_sequences VALUES('SEQ_PLANEINFOANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PLANESLICINGCONTEXT',0);
INSERT INTO my_sequences VALUES('SEQ_PLATE',0);
INSERT INTO my_sequences VALUES('SEQ_PLATEACQUISITION',0);
INSERT INTO my_sequences VALUES('SEQ_PLATEACQUISITIONANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PLATEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_POINT',0);
INSERT INTO my_sequences VALUES('SEQ_POLYGON',0);
INSERT INTO my_sequences VALUES('SEQ_POLYLINE',0);
INSERT INTO my_sequences VALUES('SEQ_PROJECT',0);
INSERT INTO my_sequences VALUES('SEQ_PROJECTANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PROJECTDATASETLINK',0);
INSERT INTO my_sequences VALUES('SEQ_PULSE',0);
INSERT INTO my_sequences VALUES('SEQ_QUANTUMDEF',0);
INSERT INTO my_sequences VALUES('SEQ_REAGENT',0);
INSERT INTO my_sequences VALUES('SEQ_REAGENTANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_RECT',0);
INSERT INTO my_sequences VALUES('SEQ_RENDERINGDEF',0);
INSERT INTO my_sequences VALUES('SEQ_RENDERINGMODEL',0);
INSERT INTO my_sequences VALUES('SEQ_REVERSEINTENSITYCONTEXT',0);
INSERT INTO my_sequences VALUES('SEQ_ROI',0);
INSERT INTO my_sequences VALUES('SEQ_ROIANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_SCREEN',0);
INSERT INTO my_sequences VALUES('SEQ_SCREENANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_SCREENPLATELINK',0);
INSERT INTO my_sequences VALUES('SEQ_SCRIPTJOB',0);
INSERT INTO my_sequences VALUES('SEQ_SESSION',0);
INSERT INTO my_sequences VALUES('SEQ_SESSIONANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_SHAPE',0);
INSERT INTO my_sequences VALUES('SEQ_SHARE',0);
INSERT INTO my_sequences VALUES('SEQ_SHAREMEMBER',0);
INSERT INTO my_sequences VALUES('SEQ_STAGELABEL',0);
INSERT INTO my_sequences VALUES('SEQ_STATSINFO',0);
INSERT INTO my_sequences VALUES('SEQ_TAGANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_TERMANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_TEXTANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_THUMBNAIL',0);
INSERT INTO my_sequences VALUES('SEQ_THUMBNAILGENERATIONJOB',0);
INSERT INTO my_sequences VALUES('SEQ_TIMESTAMPANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_TRANSMITTANCERANGE',0);
INSERT INTO my_sequences VALUES('SEQ_TYPEANNOTATION',0);
INSERT INTO my_sequences VALUES('SEQ_UPLOADJOB',0);
INSERT INTO my_sequences VALUES('SEQ_WELL',0);
INSERT INTO my_sequences VALUES('SEQ_WELLANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_WELLREAGENTLINK',0);
INSERT INTO my_sequences VALUES('SEQ_WELLSAMPLE',0);
INSERT INTO my_sequences VALUES('SEQ_WELLSAMPLEANNOTATIONLINK',0);
INSERT INTO my_sequences VALUES('SEQ_XMLANNOTATION',0);

CREATE OR REPLACE FUNCTION ome_nextval(p_seq_name   IN VARCHAR2,
                                       p_block_size IN NUMBER DEFAULT 1)
RETURN number AS
PRAGMA autonomous_transaction;
    pl_current_value NUMBER   := null;
BEGIN

   BEGIN
       SELECT current_value
         INTO pl_current_value
         FROM my_sequences
        WHERE UPPER(seq_name) = UPPER(p_seq_name)
        FOR UPDATE OF current_value;

       UPDATE my_sequences
          SET current_value   = current_value + p_block_size
        WHERE UPPER(seq_name) = UPPER(p_seq_name);

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            -- i.e. pass
            pl_current_value := null;
    END;

    COMMIT;

    IF pl_current_value is null THEN
        raise_application_error(-20000, 'Unknown sequence name: ' || p_seq_name, FALSE);
    END IF;
    return pl_current_value+p_block_size;

END ome_nextval;
/


--
-- #1390 : Triggering the addition of an "REINDEX" event on annotation events.
--

CREATE GLOBAL TEMPORARY TABLE current_session (event_id NUMBER(19),
                                               user_id  NUMBER(19),
                                               group_id NUMBER(19))
    ON COMMIT DELETE ROWS;

CREATE OR REPLACE PROCEDURE prepare_session(event_id IN NUMBER,
                                            user_id  IN NUMBER,
                                            group_id IN NUMBER)
IS
BEGIN
    DELETE FROM current_session;
    INSERT INTO current_session VALUES (event_id, user_id, group_id);
END prepare_session;
/

CREATE OR REPLACE FUNCTION current_event
RETURN NUMBER
IS
    eid NUMBER;
    tblChk NUMBER;
BEGIN
    SELECT count(*) INTO tblChk FROM sys.all_tables WHERE table_name = 'CURRENT_SESSION';
    IF NVL(tblChk,0) = 0
    THEN
        RETURN 0;
    END IF;
    SELECT event_id INTO eid FROM current_session;
    RETURN eid;
END current_event;
/

CREATE OR REPLACE FUNCTION current_or_new_event
RETURN NUMBER
IS
    eid NUMBER;
BEGIN
    select current_event() into eid from dual;
    IF NVL(eid,0) = 0
    THEN
        eid := ome_nextval('seq_event');
        INSERT INTO event (id, permissions, status, time, experimenter,
                           experimentergroup, "session", type)
            VALUES (eid, -52, 'TRIGGERED', SYSDATE, 0, 0, 0, 0);
    END IF;
    RETURN eid;
END current_or_new_event;
/

CREATE GLOBAL TEMPORARY TABLE updated_annotations (entitytype VARCHAR2(255 char),
                                                   entityid   NUMBER(19))
    ON COMMIT DELETE ROWS;

CREATE OR REPLACE TRIGGER annotation_trigger
AFTER UPDATE ON annotation
FOR EACH ROW
DECLARE
    parent_id NUMBER;
    eid       NUMBER;
    cnt       NUMBER;
BEGIN
    FOR rec IN (SELECT parent FROM annotationannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.annotations.Annotation');
    END LOOP;
    FOR rec IN (SELECT parent FROM channelannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.core.Channel');
    END LOOP;
    FOR rec IN (SELECT parent FROM datasetannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.containers.Dataset');
    END LOOP;
    FOR rec IN (SELECT parent FROM experimenterannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.meta.Experimenter');
    END LOOP;
    FOR rec IN (SELECT parent FROM experimentergroupannotation3 WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.meta.ExperimenterGroup');
    END LOOP;
    FOR rec IN (SELECT parent FROM filesetannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.fs.Fileset');
    END LOOP;
    FOR rec IN (SELECT parent FROM imageannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.core.Image');
    END LOOP;
    FOR rec IN (SELECT parent FROM namespaceannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.meta.Namespace');
    END LOOP;
    FOR rec IN (SELECT parent FROM nodeannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.meta.Node');
    END LOOP;
    FOR rec IN (SELECT parent FROM originalfileannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.core.OriginalFile');
    END LOOP;
    FOR rec IN (SELECT parent FROM pixelsannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.core.Pixels');
    END LOOP;
    FOR rec IN (SELECT parent FROM planeinfoannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.core.PlaneInfo');
    END LOOP;
    FOR rec IN (SELECT parent FROM plateannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.Plate');
    END LOOP;
    FOR rec IN (SELECT parent FROM plateacquisitionannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.PlateAcquisition');
    END LOOP;
    FOR rec IN (SELECT parent FROM projectannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.containers.Project');
    END LOOP;
    FOR rec IN (SELECT parent FROM reagentannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.Reagent');
    END LOOP;
    FOR rec IN (SELECT parent FROM roiannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.roi.Roi');
    END LOOP;
    FOR rec IN (SELECT parent FROM screenannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.Screen');
    END LOOP;
    FOR rec IN (SELECT parent FROM sessionannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.meta.Session');
    END LOOP;
    FOR rec IN (SELECT parent FROM wellannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.Well');
    END LOOP;
    FOR rec IN (SELECT parent FROM wellsampleannotationlink WHERE child = :NEW.id)
    LOOP
        INSERT INTO updated_annotations (entityid, entitytype)
            VALUES (rec.parent, 'ome.model.screen.WellSample');
    END LOOP;

    SELECT count(*) INTO cnt FROM updated_annotations;
    IF cnt <> 0
    THEN
        eid := current_or_new_event();
        INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
            SELECT ome_nextval('seq_eventlog'), 'REINDEX', -52, entityid, entitytype, eid
            FROM updated_annotations;
    END IF;
END annotation_trigger;
/

CREATE OR REPLACE TRIGGER linkEvt_ann
AFTER INSERT OR UPDATE ON annotationannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.annotations.Annotation', eid);
END linkEvt_ann;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_ann
BEFORE DELETE ON annotationannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.annotations.Annotation', eid);
END linkDel_ann;
/

CREATE OR REPLACE TRIGGER linkEvt_channel
AFTER INSERT OR UPDATE ON channelannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.core.Channel', eid);
END linkEvt_channel;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_channel
BEFORE DELETE ON channelannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.core.Channel', eid);
END linkDel_channel;
/

CREATE OR REPLACE TRIGGER linkEvt_dataset
AFTER INSERT OR UPDATE ON datasetannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.containers.Dataset', eid);
END linkEvt_dataset;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_dataset
BEFORE DELETE ON datasetannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.containers.Dataset', eid);
END linkDel_dataset;
/

CREATE OR REPLACE TRIGGER linkEvt_experimenter
AFTER INSERT OR UPDATE ON experimenterannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.meta.Experimenter', eid);
END linkEvt_experimenter;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_experimenter
BEFORE DELETE ON experimenterannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.meta.Experimenter', eid);
END linkDel_experimenter;
/

CREATE OR REPLACE TRIGGER linkEvt_group
AFTER INSERT OR UPDATE ON experimentergroupannotation3
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.meta.ExperimenterGroup', eid);
END linkEvt_group;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_group
BEFORE DELETE ON experimentergroupannotation3
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.meta.ExperimenterGroup', eid);
END linkDel_group;
/

CREATE OR REPLACE TRIGGER linkEvt_fileset
AFTER INSERT OR UPDATE ON filesetannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.fs.Fileset', eid);
END linkEvt_fileset;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_fileset
BEFORE DELETE ON filesetannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.fs.Fileset', eid);
END linkDel_fileset;
/

CREATE OR REPLACE TRIGGER linkEvt_image
AFTER INSERT OR UPDATE ON imageannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.core.Image', eid);
END linkEvt_image;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_image
BEFORE DELETE ON imageannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.core.Image', eid);
END linkDel_image;
/

CREATE OR REPLACE TRIGGER linkEvt_namespace
AFTER INSERT OR UPDATE ON namespaceannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.meta.Namespace', eid);
END linkEvt_namespace;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_namespace
BEFORE DELETE ON namespaceannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.meta.Namespace', eid);
END linkDel_namespace;
/

CREATE OR REPLACE TRIGGER linkEvt_node
AFTER INSERT OR UPDATE ON nodeannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.meta.Node', eid);
END linkEvt_node;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_node
BEFORE DELETE ON nodeannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.meta.Node', eid);
END linkDel_node;
/

CREATE OR REPLACE TRIGGER linkEvt_originalfile
AFTER INSERT OR UPDATE ON originalfileannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.core.OriginalFile', eid);
END linkEvt_originalfile;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_originalfile
BEFORE DELETE ON originalfileannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.core.OriginalFile', eid);
END linkDel_originalfile;
/

CREATE OR REPLACE TRIGGER linkEvt_pixels
AFTER INSERT OR UPDATE ON pixelsannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.core.Pixels', eid);
END linkEvt_pixels;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_pixels
BEFORE DELETE ON pixelsannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.core.Pixels', eid);
END linkDel_pixels;
/

CREATE OR REPLACE TRIGGER linkEvt_planeinfo
AFTER INSERT OR UPDATE ON planeinfoannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.core.PlaneInfo', eid);
END linkEvt_planeinfo;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_planeinfo
BEFORE DELETE ON planeinfoannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.core.PlaneInfo', eid);
END linkDel_planeinfo;
/

CREATE OR REPLACE TRIGGER linkEvt_plate
AFTER INSERT OR UPDATE ON plateannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.Plate', eid);
END linkEvt_plate;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_plate
BEFORE DELETE ON plateannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.Plate', eid);
END linkDel_plate;
/

CREATE OR REPLACE TRIGGER linkEvt_plateacquisition
AFTER INSERT OR UPDATE ON plateacquisitionannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.PlateAcquisition', eid);
END linkEvt_plateacquisition;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_plateacquisition
BEFORE DELETE ON plateacquisitionannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.PlateAcquisition', eid);
END linkDel_plateacquisition;
/

CREATE OR REPLACE TRIGGER linkEvt_project
AFTER INSERT OR UPDATE ON projectannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.containers.Project', eid);
END linkEvt_project;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_project
BEFORE DELETE ON projectannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.containers.Project', eid);
END linkDel_project;
/

CREATE OR REPLACE TRIGGER linkEvt_reagent
AFTER INSERT OR UPDATE ON reagentannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.Reagent', eid);
END linkEvt_reagent;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_reagent
BEFORE DELETE ON reagentannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.Reagent', eid);
END linkDel_reagent;
/

CREATE OR REPLACE TRIGGER linkEvt_roi
AFTER INSERT OR UPDATE ON roiannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.roi.Roi', eid);
END linkEvt_roi;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_roi
BEFORE DELETE ON roiannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.roi.Roi', eid);
END linkDel_roi;
/

CREATE OR REPLACE TRIGGER linkEvt_screen
AFTER INSERT OR UPDATE ON screenannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.Screen', eid);
END linkEvt_screen;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_screen
BEFORE DELETE ON screenannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.Screen', eid);
END linkDel_screen;
/

CREATE OR REPLACE TRIGGER linkEvt_session_
AFTER INSERT OR UPDATE ON sessionannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.meta.Session', eid);
END linkEvt_session_;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_session_
BEFORE DELETE ON sessionannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.meta.Session', eid);
END linkDel_session_;
/

CREATE OR REPLACE TRIGGER linkEvt_well
AFTER INSERT OR UPDATE ON wellannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.Well', eid);
END linkEvt_well;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_well
BEFORE DELETE ON wellannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.Well', eid);
END linkDel_well;
/

CREATE OR REPLACE TRIGGER linkEvt_wellsample
AFTER INSERT OR UPDATE ON wellsampleannotationlink
FOR EACH ROW
DECLARE
    eid NUMBER;
    nextval NUMBER;
BEGIN
    eid := current_or_new_event();
    nextval := ome_nextval('seq_eventlog');
    INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
        VALUES (nextval, 'REINDEX', -52, :NEW.parent, 'ome.model.screen.WellSample', eid);
END linkEvt_wellsample;
/

-- Delete triggers to go with update triggers (See #9337)
CREATE OR REPLACE TRIGGER linkDel_wellsample
BEFORE DELETE ON wellsampleannotationlink
FOR EACH ROW
DECLARE
  eid NUMBER;
  nextval NUMBER;
BEGIN
  eid := current_or_new_event();
  nextval := ome_nextval('seq_eventlog');
  INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
    VALUES (nextval, 'REINDEX', -52, :OLD.parent, 'ome.model.screen.WellSample', eid);
END linkDel_wellsample;
/

--
-- END #1390
--




--
-- First, we install a unique constraint so that it is only possible
-- to go from versionA/patchA to versionB/patchB once.
--
alter table dbpatch add constraint unique_dbpatch unique (currentVersion, currentPatch, previousVersion, previousPatch);

--
-- Since this is a table that we will be using in DB-specific ways, we're also going
-- to make working with it a bit simpler.
--
alter table dbpatch modify permissions default -52;
alter table dbpatch modify message default 'Updating';
-- Following Trigger is doing what "DEFAULT ome_nextval('seq_dbpatch');" is doing in PostGres.
CREATE OR REPLACE TRIGGER dbpatch_autonumber
BEFORE INSERT ON dbpatch FOR EACH ROW
BEGIN
    IF :NEW.id IS NULL THEN
	SELECT OME_NEXTVAL('seq_dbpatch') INTO :NEW.id FROM dual;
    END IF;
END;
/

SHOW ERRORS;


--
-- Then, we insert into the patch table the patch (initialization) which we are currently
-- running so that if anything goes wrong, we'll have some record.
--
insert into dbpatch (currentVersion, currentPatch, previousVersion, previousPatch, message)
             values ('OMERO5.0',  0,    'OMERO5.0',   0,             'Initializing');

--
-- Temporarily make event columns nullable; restored below.
--
alter table event modify (type null);
alter table event modify (experimentergroup null);

--
-- Here we will create the root account and the necessary groups
--
insert into experimenter (id,permissions,version,omename,firstname,lastname)
        values (0,0,0,'root','root','root');
insert into experimenter (id,permissions,version,omename,firstname,lastname)
        select ome_nextval('seq_experimenter'),0,0,'guest','Guest','Account' from dual;
insert into node
        (id,permissions,uuid,conn,up,down)
        select 0,-52,'000000000000000000000000000000000000','unkclock_timestampn',SYSDATE,SYSDATE FROM dual;
insert into session_
        (id,permissions,timetoidle,timetolive,started,closed,defaulteventtype,uuid,owner,node)
        select 0,-52,0,0,SYSDATE,SYSDATE,'BOOTSTRAP',0000,0,0 FROM dual;
insert into session_
        (id,permissions,timetoidle,timetolive,started,closed,defaulteventtype,uuid,owner,node)
        select ome_nextval('seq_session'),-52,0,0,SYSDATE,SYSDATE,'PREVIOUSITEMS','1111',0,0 FROM dual;
insert into event (id,permissions,time,status,experimenter,"session") values (0,0,SYSDATE,'BOOTSTRAP',0,0);

--
-- Default group permissions (ticket:1783)
-- * "system" is private, so that administrators do not share by accident
-- * "user" is public by default since its purpose is to share objects (ticket:1794)
-- * "guest" is private by default so that it doesn't show up on any lists,
--    though nothing should be created there.
--
insert into experimentergroup (id,permissions,version,name)
        values (0,-120,0,'system');
insert into experimentergroup (id,permissions,version,name)
        select ome_nextval('seq_experimentergroup'),-52,0,'user' from dual;
insert into experimentergroup (id,permissions,version,name)
        select ome_nextval('seq_experimentergroup'),-120,0,'guest' from dual;

insert into eventtype (id,permissions,value) values
        (0,-52,'Bootstrap');
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        values
        (0,-52,0,0,0,0,1);
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        select ome_nextval('seq_groupexperimentermap'),-52,0,1,0,1,0 from dual;
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        select ome_nextval('seq_groupexperimentermap'),-52,0,2,1,0,0 from dual;

update event set type = 0;
update event set experimentergroup = 0;

alter table event modify (type not null);
alter table event modify (experimentergroup not null);


insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'WideField' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'LaserScanningConfocalMicroscopy' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'SpinningDiskConfocal' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'SlitScanConfocal' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'MultiPhotonMicroscopy' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'StructuredIllumination' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'SingleMoleculeImaging' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'TotalInternalReflection' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'FluorescenceLifetime' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'SpectralImaging' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'FluorescenceCorrelationSpectroscopy' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'NearFieldScanningOpticalMicroscopy' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'SecondHarmonicGenerationImaging' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'PALM' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'STORM' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'STED' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'TIRF' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'FSM' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'LCM' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'Other' from dual;
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-52,'Unknown' from dual;
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-52,'Hg' from dual;
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-52,'Xe' from dual;
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-52,'HgXe' from dual;
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-52,'Other' from dual;
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-52,'Unknown' from dual;
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-52,'1x1' from dual;
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-52,'2x2' from dual;
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-52,'4x4' from dual;
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-52,'8x8' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'Adler-32' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'CRC-32' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'MD5-128' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'Murmur3-32' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'Murmur3-128' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'SHA1-160' from dual;
insert into checksumalgorithm (id,permissions,value)
    select ome_nextval('seq_checksumalgorithm'),-52,'File-Size-64' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Brightfield' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Phase' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'DIC' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'HoffmanModulation' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'ObliqueIllumination' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'PolarizedLight' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Darkfield' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Fluorescence' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Other' from dual;
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-52,'Unknown' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'UV' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'PlanApo' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'PlanFluor' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'SuperFluor' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'VioletCorrected' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Achro' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Achromat' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Fluor' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Fl' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Fluar' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Neofluar' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Fluotar' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Apo' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Other' from dual;
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-52,'Unknown' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'CCD' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'IntensifiedCCD' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'AnalogVideo' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'PMT' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'Photodiode' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'Spectroscopy' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'LifetimeImaging' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'CorrelationSpectroscopy' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'FTIR' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'EM-CCD' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'APD' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'CMOS' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'EBCCD' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'Other' from dual;
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-52,'Unknown' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYZCT' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYZTC' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYCTZ' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYCZT' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYTCZ' from dual;
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-52,'XYTZC' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Import' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Internal' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Shoola' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'User' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Task' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Test' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Processing' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'FullText' from dual;
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-52,'Sessions' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'FP' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'FRET' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'TimeLapse' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'FourDPlus' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Screen' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Immunocytochemistry' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Immunofluorescence' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'FISH' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Electrophysiology' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'IonImaging' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Colocalization' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'PGIDocumentation' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'FluorescenceLifetime' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'SpectralImaging' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Photobleaching' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Other' from dual;
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-52,'Unknown' from dual;
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-52,'linear' from dual;
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-52,'polynomial' from dual;
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-52,'exponential' from dual;
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-52,'logarithmic' from dual;
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-52,'Incandescent' from dual;
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-52,'Halogen' from dual;
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-52,'Other' from dual;
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-52,'Unknown' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'LongPass' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'ShortPass' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'BandPass' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'MultiPass' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'Dichroic' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'NeutralDensity' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'Tuneable' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'Other' from dual;
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-52,'Unknown' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'PNG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/PNG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'JPEG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/JPEG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'PGM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/PGM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Fits' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Fits' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'GIF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/GIF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'BMP' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/BMP' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Dicom' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Dicom' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'BioRad' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/BioRad' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'IPLab' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/IPLab' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Deltavision' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Deltavision' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'MRC' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/MRC' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Gatan' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Gatan' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Imaris' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Imaris' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'OpenlabRaw' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/OpenlabRaw' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'OMEXML' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/OMEXML' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'LIF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/LIF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'AVI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/AVI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'QT' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/QT' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Pict' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Pict' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'SDT' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/SDT' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'EPS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/EPS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Slidebook' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Slidebook' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Alicona' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Alicona' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'MNG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/MNG' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'NRRD' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/NRRD' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Khoros' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Khoros' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Visitech' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Visitech' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'LIM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/LIM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'PSD' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/PSD' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'InCell' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/InCell' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ICS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ICS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'PerkinElmer' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/PerkinElmer' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'TCS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/TCS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'FV1000' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/FV1000' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ZeissZVI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ZeissZVI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'IPW' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/IPW' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'LegacyND2' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/LegacyND2' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ND2' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ND2' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'PCI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/PCI' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ImarisHDF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ImarisHDF' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Metamorph' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Metamorph' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ZeissLSM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ZeissLSM' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'SEQ' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/SEQ' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Gel' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Gel' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ImarisTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ImarisTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Flex' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Flex' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'SVS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/SVS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Leica' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Leica' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Nikon' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Nikon' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Fluoview' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Fluoview' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Prairie' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Prairie' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Micromanager' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Micromanager' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'ImprovisionTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/ImprovisionTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'OMETiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/OMETiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'MetamorphTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/MetamorphTiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Tiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Tiff' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Openlab' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/Openlab' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'MIAS' from dual;
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-52,'Companion/MIAS' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'Transmitted' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'Epifluorescence' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'Oblique' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'NonLinear' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'Other' from dual;
insert into illumination (id,permissions,value)
    select ome_nextval('seq_illumination'),-52,'Unknown' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Oil' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Water' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'WaterDipping' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Air' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Multi' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Glycerol' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Other' from dual;
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-52,'Unknown' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Submitted' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Resubmitted' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Queued' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Requeued' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Running' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Error' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Waiting' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Finished' from dual;
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-52,'Cancelled' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Rhodamine6G' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'CoumarinC30' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'ArFl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'ArCl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'KrFl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'KrCl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'XeFl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'XeCl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'XeBr' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'GaAs' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'GaAlAs' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'EMinus' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Cu' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Ag' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'N' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Ar' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Kr' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Xe' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'HeNe' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'HeCd' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'CO' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'CO2' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'H2O' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'HFl' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'NdGlass' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'NdYAG' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'ErGlass' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'ErYAG' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'HoYLF' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'HoYAG' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Ruby' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'TiSapphire' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Alexandrite' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Other' from dual;
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-52,'Unknown' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Excimer' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Gas' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'MetalVapor' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'SolidState' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Dye' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Semiconductor' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'FreeElectron' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Other' from dual;
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-52,'Unknown' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Air' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Oil' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Water' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Glycerol' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Other' from dual;
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-52,'Unknown' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'FRAP' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'Photoablation' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'Photoactivation' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'Uncaging' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'OpticalTrapping' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'FLIP' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'InverseFRAP' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'Other' from dual;
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-52,'Unknown' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Upright' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Inverted' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Dissection' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Electrophysiology' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Other' from dual;
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-52,'Unknown' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'RGB' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'ARGB' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'CMYK' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'HSV' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'Monochrome' from dual;
insert into photometricinterpretation (id,permissions,value)
    select ome_nextval('seq_photometricinterpretation'),-52,'ColorMap' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'bit' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'int8' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'int16' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'int32' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'uint8' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'uint16' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'uint32' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'float' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'double' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'complex' from dual;
insert into pixelstype (id,permissions,value)
    select ome_nextval('seq_pixelstype'),-52,'double-complex' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'CW' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'Single' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'QSwitched' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'Repetitive' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'ModeLocked' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'Other' from dual;
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-52,'Unknown' from dual;
insert into renderingmodel (id,permissions,value)
    select ome_nextval('seq_renderingmodel'),-52,'rgb' from dual;
insert into renderingmodel (id,permissions,value)
    select ome_nextval('seq_renderingmodel'),-52,'greyscale' from dual;

-- Adding bit depth to pixelstype (#2724)
update pixelstype set bitsize = 1 where value = 'bit';
update pixelstype set bitsize = 8 where value = 'int8';
update pixelstype set bitsize = 8 where value = 'uint8';
update pixelstype set bitsize = 16 where value = 'int16';
update pixelstype set bitsize = 16 where value = 'uint16';
update pixelstype set bitsize = 32 where value = 'int32';
update pixelstype set bitsize = 32 where value = 'uint16';
update pixelstype set bitsize = 32 where value = 'uint32';
update pixelstype set bitsize = 32 where value = 'float';
update pixelstype set bitsize = 64 where value = 'double';
update pixelstype set bitsize = 64 where value = 'complex';
update pixelstype set bitsize = 128 where value = 'double-complex';
alter table pixelstype modify bitsize number(20) not null;

--
-- Cryptographic functions for specifying UUID
--

CREATE OR REPLACE FUNCTION uuid
   RETURN CHAR
   IS
   v_uuid    CHAR(36) := NULL;
   BEGIN
      SELECT SUBSTR(sys_guid, 1, 8)  ||'-'||
             SUBSTR(sys_guid, 9, 4)  ||'-'||
             SUBSTR(sys_guid, 13, 4) ||'-'||
             SUBSTR(sys_guid, 16, 4) ||'-'||
             SUBSTR(sys_guid, 20, 12)
        INTO v_uuid
        FROM DUAL;

        RETURN v_uuid;
END;
/

CREATE OR REPLACE FUNCTION sys_guid
RETURN RAW
IS
c RAW(16);
BEGIN
   SELECT SYS_GUID()
   INTO c
   FROM sys.dual;
RETURN c;
END;
/

--
-- Configuration table including a UUID uniquely identifying this database.
--
create table configuration ( name varchar2(255) primary key, value CLOB );
insert into configuration values ('omero.db.uuid', uuid);

--
-- ticket:2201 - creating repository data structures
--
alter  table pixels add (path varchar(2048));
alter  table pixels add (name CLOB);
alter  table pixels add (repo varchar(36));
alter  table pixels add (params PARAMS_MAP);
create index pixels_repo_index on pixels (repo);
-- No unique index on (path, repo, name) since it depends on params

alter  table originalfile modify mimetype default 'application/octet-stream';
alter  table originalfile add (repo varchar(36));
alter  table originalfile add (params PARAMS_MAP);
create index originalfile_mime_index on originalfile (mimetype);
create index originalfile_repo_index on originalfile (repo);

-- Because of the way that Oracle handles indexing multi-part keys when some elements are
-- `null` (i.e. it is not possible to index `where repo is not null` as in Postgres), we
-- create an extra `reponame` column that will be populated with a new UUID-tagged string
-- for each item in the local repo (i.e. where `repo` is null).
alter table originalfile add (reponame varchar(42) not null);
alter table originalfile add constraint originalfile_unique_path unique (reponame, path, name) deferrable initially deferred;

CREATE OR REPLACE TRIGGER unique_repo_path
BEFORE INSERT OR UPDATE ON originalfile
FOR EACH ROW
BEGIN
  IF :NEW.repo is NULL THEN
    :NEW.reponame := 'local-'||uuid();
  ELSE
    :NEW.reponame := :NEW.repo;
  END IF;
END unique_repo_path;
/

--
-- end ticket:2201
--

-- Indices. See #1640, #2573, etc.
create unique index namespace_name on namespace (name);
create unique index well_col_row on well (plate, "column", "row");
create index eventlog_entitytype on eventlog(entitytype);
create index eventlog_entityid on eventlog(entityid);
create index eventlog_action on eventlog(action);



create table password ( experimenter_id number primary key REFERENCES experimenter (id), hash char(24), dn CLOB );
insert into password (experimenter_id, hash) values (0,'@ROOTPASS@');
insert into password (experimenter_id, hash) values (1,'');
-- root can now login with omero.rootpass property value
-- and guest can login with any value

--
-- FS Resources
--

-- Prevent the deletion of mimetype = "Directory" objects
CREATE OR REPLACE TRIGGER fs_dir_delete
BEFORE DELETE ON originalfile
FOR EACH ROW
DECLARE
  chldChk NUMBER;
BEGIN
  IF :OLD.repo is NOT NULL THEN
    IF :OLD.mimetype = 'Directory' THEN
      --
      -- If any children are found, prevent deletion
      --
      SELECT count(*) INTO chldChk FROM originalfile
        WHERE path = :OLD.path || :OLD.name || '/';
      IF NVL(chldChk,0) <> 0 THEN
        -- CANCEL DELETE
        RAISE_APPLICATION_ERROR(-20000, 'Directory('||:OLD.id||')='||:OLD.path||:OLD.name||'/ is not empty!');
      END IF;
    END IF;
  END IF;
  -- proceed
END fs_dir_delete;
/

-- Prevent Directory entries in the originalfile table from having their mimetype changed.
CREATE OR REPLACE TRIGGER fs_dir_mimetype
BEFORE UPDATE ON originalfile
FOR EACH ROW
BEGIN
  IF :OLD.mimetype = 'Directory' AND :NEW.mimetype != 'Directory' THEN
    RAISE_APPLICATION_ERROR(-20001, 'Directory('||:OLD.id||')='||:OLD.path||:OLD.name||'/ must remain a Directory');
  END IF;
END fs_dir_mimetype;
/

-- Prevent SQL DELETE from removing the root experimenter from the system or user group.
CREATE OR REPLACE TRIGGER prevent_root_delete
BEFORE DELETE ON groupexperimentermap
FOR EACH ROW
BEGIN
  IF :OLD.child = 0 THEN
    IF :OLD.parent = 0 THEN
      RAISE_APPLICATION_ERROR(-20002, 'cannot remove system group membership for root');
    ELSIF :OLD.parent = 1 THEN
      RAISE_APPLICATION_ERROR(-20003, 'cannot remove user group membership for root');
    END IF;
  END IF;
END prevent_root_delete;
/

-- Prevent SQL UPDATE from removing the root experimenter from the system or user group.
CREATE OR REPLACE TRIGGER prevent_root_update
BEFORE UPDATE ON groupexperimentermap
FOR EACH ROW
BEGIN
  IF :OLD.child != :NEW.child OR :OLD.parent != :NEW.parent THEN
    IF :OLD.child = 0 THEN
      IF :OLD.parent = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'cannot remove system group membership for root');
      ELSIF :OLD.parent = 1 THEN
        RAISE_APPLICATION_ERROR(-20003, 'cannot remove user group membership for root');
      END IF;
    END IF;
  END IF;
END prevent_root_update;
/

-- Prevent the root and guest experimenters from being renamed.
CREATE OR REPLACE TRIGGER prvnt_exptr_rename
BEFORE UPDATE ON experimenter
FOR EACH ROW
BEGIN
  IF :OLD.omename != :NEW.omename THEN
    IF :OLD.id = 0 THEN
      RAISE_APPLICATION_ERROR(-20004, 'cannot rename root experimenter');
    ELSIF :OLD.id = 1 THEN
      RAISE_APPLICATION_ERROR(-20005, 'cannot rename guest experimenter');
    END IF;
  END IF;
END prvnt_exptr_rename;
/

-- Prevent the system, user and guest groups from being renamed.
CREATE OR REPLACE TRIGGER prvnt_group_rename
BEFORE UPDATE ON experimentergroup
FOR EACH ROW
BEGIN
  IF :OLD.name != :NEW.name THEN
    IF :OLD.id = 0 THEN
      RAISE_APPLICATION_ERROR(-20006, 'cannot rename system experimenter group');
    ELSIF :OLD.id = 1 THEN
      RAISE_APPLICATION_ERROR(-20007, 'cannot rename user experimenter group');
    ELSIF :OLD.id = 2 THEN
      RAISE_APPLICATION_ERROR(-20008, 'cannot rename guest experimenter group');
    END IF;
  END IF;
END prvnt_group_rename;
/

CREATE TABLE fs_deletelog (
    event_id NUMBER(19) NOT NULL,
    file_id NUMBER(19) NOT NULL,
    owner_id NUMBER(19) NOT NULL,
    group_id NUMBER(19) NOT NULL,
    path VARCHAR2(255 CHAR) NOT NULL,
    name VARCHAR2(255 CHAR) NOT NULL,
    repo VARCHAR2(36 CHAR) NOT NULL,
    params PARAMS_MAP);

CREATE OR REPLACE TRIGGER fs_log_delete
AFTER DELETE ON originalfile
FOR EACH ROW
DECLARE
  eid NUMBER;
BEGIN
  IF :OLD.repo is NOT NULL THEN
    eid := current_or_new_event();
    INSERT INTO fs_deletelog (event_id, file_id, owner_id,
                              group_id, path, name, repo, params)
      VALUES (eid, :OLD.id, :OLD.owner_id,
              :OLD.group_id, :OLD.path, :OLD.name, :OLD.repo, :OLD.params);
  END IF;
END fs_log_delete;
/


-- Here we have finished initializing this database.
update dbpatch set message = 'Database ready.', finished = SYSDATE
  where currentVersion = 'OMERO5.0' and
        currentPatch = 0 and
        previousVersion = 'OMERO5.0' and
        previousPatch = 0;


SPOOL OFF;
EXIT;
